name: Postman Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  postman-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write

    steps:
      # 1. Baixar o código
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Configurar Node.js
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3. Instalar Newman
      - name: Install Newman
        run: npm install -g newman newman-reporter-html

      # 4. Validar arquivos Postman
      - name: Validate Files
        run: |
          echo "Estrutura do diretório:"
          ls -la .postman/
          [ -f ".postman/Demo.postman_collection.json" ] || { echo "❌ Coleção não encontrada"; exit 1; }

      # 5. Executar testes (com tratamento de falhas)
      - name: Run Tests
        id: run-tests
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          newman run .postman/Demo.postman_collection.json \
          --reporters cli,html \
          --reporter-html-export newman-report.html \
          --suppress-exit-code \
          --disable-unicode \
          --verbose
          
          # Forçar criação do arquivo mesmo em falhas graves
          [ -f "newman-report.html" ] || echo "<html><body><h1>Relatório não gerado</h1></body></html>" > newman-report.html

      # 6. Debug - Mostrar conteúdo gerado
      - name: Debug Files
        run: |
          echo "Conteúdo atual:"
          ls -la
          echo "Conteúdo do relatório:"
          [ -f "newman-report.html" ] && head -n 5 newman-report.html || echo "❌ Arquivo não existe"

      # 7. Upload do relatório (SEMPRE executa)
      - name: Upload Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: newman-report-${{ github.run_number }}
          path: ${{ github.workspace }}/newman-report.html
          retention-days: 7